{"version":3,"sources":["App.css","components/EventItem/EventItem.css","components/EventsList/EventList.css","components/SearchForm/SearchForm.css","components/SearchForm/SearchForm.js","components/EventItem/EventItem.js","components/EventsList/EventsList.js","containers/EventFinder/EventFinder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","AppHeader","eventItem","eventList","SearchFormContainer","ExtraMargin","DateBox","open","Overlay","formatDateDisplay","date","defaultText","format","SearchForm","state","dateRangePicker","selection","startDate","Date","endDate","addDays","key","visible","toggleVisibility","_this","setState","toggleOveraly","which","payload","this","Object","defineProperty","objectSpread","_this2","react_default","a","createElement","className","classes","onClick","Container","Form","onSubmit","props","submit","Group","style","justifyContent","Input","width","name","value","searchValue","onChange","searchChange","placeholder","type","readOnly","Button","content","primary","join","dist","e","handleRangeChange","showSelectionPreview","moveRangeOnFirstSelection","months","ranges","direction","Component","_ref","artist","dateTime","city","country","classses","eventsList","console","log","artistData","data","map","lineup","datetime","venue","EventItem_EventItem","id","toDate","dateStr","_dateStr$split","split","_dateStr$split2","slicedToArray","day","month","year","EventFinder","isLoading","inputValueHandler","target","dateRangeHandler","startDateTest","endDateTest","searchParamsHandler","params","query","strDate","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","item","err","return","fetchDataHandler","fetch","concat","then","response","json","catch","error","formSubmitHandler","preventDefault","URLSearchParams","FormData","components_SearchForm_SearchForm","column","dateRange","EventsList","containers_EventFinder_EventFinder","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d6cca73.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__3Ge-C\",\"AppHeader\":\"App__AppHeader__3MRQK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"eventItem\":\"EventItem__eventItem__3dzJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"eventList\":\"EventList__eventList__v5rIw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchFormContainer\":\"SearchForm__SearchFormContainer__2H55e\",\"ExtraMargin\":\"SearchForm__ExtraMargin__3EcL3\",\"DateBox\":\"SearchForm__DateBox__3G8Fb\",\"open\":\"SearchForm__open__M-w0p\",\"Overlay\":\"SearchForm__Overlay__1D88p\"};","import React, { Component } from 'react';\r\nimport { DateRange  } from 'react-date-range';\r\nimport { format, addDays } from 'date-fns';\r\nimport { Container, Form } from 'semantic-ui-react';\r\n\r\nimport classes from './SearchForm.css'\r\n\r\nfunction formatDateDisplay(date, defaultText) {\r\n  if (!date) return defaultText;\r\n  return format(date, 'DD-MM-YYYY');\r\n}\r\n\r\nclass SearchForm extends Component {\r\n\r\n\tstate = {\r\n\t\tdateRangePicker: {\r\n\t\t\tselection: {\r\n\t\t\t\tstartDate: new Date(),\r\n\t\t\t\tendDate: addDays(new Date(), 7),\r\n\t\t\t\tkey: 'selection',\r\n\t\t\t},\r\n\t\t},\r\n\t\tvisible: false\r\n\t}\r\n\r\n\ttoggleVisibility = () => this.setState({ visible: !this.state.visible });\r\n\r\n\ttoggleOveraly = () => this.setState({visible: false});\r\n\r\n\thandleRangeChange(which, payload) {\r\n    // console.log('which', which, 'payload', payload);\r\n    this.setState({\r\n      [which]: {\r\n        ...this.state[which],\r\n        ...payload,\r\n      },\r\n    });\r\n  }\r\n\r\n\trender() {\r\n\t\tconst { visible } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.SearchFormContainer}>\r\n        <div className={visible ? classes.Overlay : null} onClick={this.toggleOveraly}></div>\r\n        <Container>\r\n          <Form onSubmit={this.props.submit}>\r\n            <Form.Group style={{justifyContent: 'center'}}>\r\n              <Form.Input width={6} name='searchValue' value={this.props.searchValue} onChange={this.props.searchChange} placeholder='Search...' />\r\n\r\n              <Form.Input \r\n              className={classes.ExtraMargin}\r\n              type=\"text\"\r\n              name=\"startDate\"\r\n              readOnly\r\n              onClick={this.toggleVisibility}\r\n              value={formatDateDisplay(this.state.dateRangePicker.selection.startDate)}\r\n              />\r\n              <Form.Input \r\n              type=\"text\"\r\n              name=\"endDate\"\r\n              readOnly\r\n              onClick={this.toggleVisibility}\r\n              value={formatDateDisplay(this.state.dateRangePicker.selection.endDate)}\r\n              />\r\n              <Form.Button type=\"submit\" content='Szukaj' primary />\r\n            </Form.Group>\r\n          </Form>\r\n        </Container>\r\n\t\t\t  <div className={visible ? [classes.DateBox, classes.open].join(' ') : classes.DateBox}>\r\n\t\t\t\t\t\t<DateRange\r\n              onChange={(e) => {\r\n                // let strDate = formatDateDisplay(this.state.dateRangePicker.selection.startDate);\r\n                // let endDate = formatDateDisplay(this.state.dateRangePicker.selection.endDate);\r\n                // this.props.dateRange(strDate, endDate);\r\n                this.handleRangeChange('dateRangePicker', e);\r\n              }\r\n              }\r\n\t\t\t\t\t\t\tshowSelectionPreview={false}\r\n\t\t\t\t\t\t\tmoveRangeOnFirstSelection={false}\r\n\t\t\t\t\t\t\tmonths={2}\r\n\t\t\t\t\t\t\tranges={[this.state.dateRangePicker.selection]}\r\n\t\t\t\t\t\t\tdirection=\"horizontal\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchForm;","import React from 'react';\r\n\r\nimport { format } from 'date-fns';\r\nimport classses from './EventItem.css';\r\n\r\nconst eventItem = ({ artist, dateTime, city, country }) => {\r\n  return (\r\n    <li className={classses.eventItem}>\r\n\r\n      <p>{artist}</p>\r\n      <p>{format(dateTime, 'HH:MM DD-MM-YYYY')}</p>\r\n      <p>{city}</p>\r\n      <p>{country}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default eventItem;","import React from 'react';\r\n\r\nimport EventItem from '../EventItem/EventItem';\r\nimport classes from './EventList.css';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nconst eventsList = (props) => {\r\n\r\n  console.log(props.artistData);\r\n  console.log(props.data);\r\n\r\n  const data = props.data;\r\n\r\n  const eventItem = data => {\r\n    const artist = data.lineup[0];\r\n    const dateTime = data.datetime;\r\n    const city = data.venue.city;\r\n    const country = data.venue.country;\r\n    return <EventItem key={data.id} artist={artist} dateTime={dateTime} city={city} country={country} />\r\n  }\r\n\r\n  return(\r\n    <Container>\r\n      <ul className={classes.eventList}>\r\n        {data !== null ? data.map(eventItem) : 'Please search artist...'}\r\n      </ul>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default eventsList;\r\n","import React, { Component } from 'react';\r\n\r\nimport SearchForm from '../../components/SearchForm/SearchForm';\r\nimport EventsList from '../../components/EventsList/EventsList';\r\nimport { format } from 'date-fns';\r\n\r\nfunction toDate(dateStr) {\r\n  const [day, month, year] = dateStr.split(\"-\")\r\n  return new Date(year, month - 1, day)\r\n}\r\n\r\nclass EventFinder extends Component {\r\n\r\n  state = {\r\n    searchValue: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    isLoading: false,\r\n    artist: '',\r\n    data: null,\r\n    artistData: null\r\n  }\r\n\r\n  inputValueHandler = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n    // console.log('target', e.target.value);\r\n  }\r\n\r\n  dateRangeHandler = (startDateTest, endDateTest) => {\r\n    this.setState({startDateTest, endDateTest});\r\n    // console.log(e.target.value);\r\n  }\r\n\r\n  searchParamsHandler = (params) => {\r\n    const query = params;\r\n    let strDate = '';\r\n    let endDate = '';\r\n    for(let item of query.entries()) {\r\n      if(item[0] === 'startDate') {\r\n        strDate = item[1];\r\n      } else if(item[0] === 'endDate') {\r\n        endDate = item[1];\r\n      }\r\n    }\r\n    this.setState({\r\n      startDate: format(toDate(strDate), 'YYYY-MM-DD'),\r\n      endDate: format(toDate(endDate), 'YYYY-MM-DD'),\r\n    }, () => this.fetchDataHandler());\r\n\r\n  }\r\n\r\n  fetchDataHandler = () => {\r\n    fetch(`https://rest.bandsintown.com/artists/${this.state.searchValue}/events?app_id=8cd32220-ea94-4c7a-a074-ec271e841187&date=${this.state.startDate}%2C${this.state.endDate}`)\r\n    .then(response => response.json())\r\n    .then(json => this.setState({data: json}))\r\n    .catch(error => console.log(error));\r\n\r\n    fetch(`https://rest.bandsintown.com/artists/${this.state.searchValue}?app_id=8cd32220-ea94-4c7a-a074-ec271e84118`)\r\n    .then(response => response.json())\r\n    .then(json => this.setState({artistData: json}))\r\n    .catch(error => console.log(error));\r\n\r\n  }\r\n\r\n  formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    this.searchParamsHandler(new URLSearchParams(new FormData(e.target)));\r\n  }\r\n\r\n  render() {\r\n    // console.log('data', this.state.data);\r\n    // console.log('start', this.state.startDate);\r\n    // console.log('end', this.state.endDate);\r\n    return (\r\n      <div>\r\n        <SearchForm \r\n          column={8}\r\n          searchValue={this.state.searchValue}\r\n          searchChange={this.inputValueHandler}\r\n          dateRange={(startDate, endDate) => this.dateRangeHandler(startDate, endDate)}\r\n          isLoading={this.state.isLoading}\r\n          submit={this.formSubmitHandler} />\r\n        <EventsList \r\n          data={this.state.data}\r\n          artistData={this.state.artistData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventFinder;\r\n","import React, { Component } from 'react';\r\n\r\nimport EventFinder from './containers/EventFinder/EventFinder';\r\nimport classes from './App.css';\r\nimport 'react-date-range/dist/styles.css';\r\nimport 'react-date-range/dist/theme/default.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.App}>\r\n        <header className={classes.AppHeader}>\r\n          <EventFinder />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}